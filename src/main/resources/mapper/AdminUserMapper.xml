<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.renbaojia.blog.dao.AdminUserMapper">
  <resultMap id="BaseResultMap" type="com.renbaojia.blog.model.AdminUser">
    <id column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="open_id" jdbcType="INTEGER" property="openId" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="login_time" jdbcType="DATE" property="loginTime" />
    <result column="last_login_time" jdbcType="DATE" property="lastLoginTime" />
    <result column="other_login" jdbcType="VARCHAR" property="otherLogin" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    admin_id, username, phone, img, password, open_id, token, login_time, last_login_time, 
    other_login, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.renbaojia.blog.model.AdminUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.admin_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public.admin_user
    where admin_id = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from public.admin_user
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.renbaojia.blog.model.AdminUserExample">
    delete from public.admin_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.renbaojia.blog.model.AdminUser">
    insert into public.admin_user (admin_id, username, phone, 
      img, password, open_id, 
      token, login_time, last_login_time, 
      other_login, create_time, update_time
      )
    values (#{adminId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{img,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{openId,jdbcType=INTEGER}, 
      #{token,jdbcType=VARCHAR}, #{loginTime,jdbcType=DATE}, #{lastLoginTime,jdbcType=DATE}, 
      #{otherLogin,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.renbaojia.blog.model.AdminUser">
    insert into public.admin_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="otherLogin != null">
        other_login,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=DATE},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=DATE},
      </if>
      <if test="otherLogin != null">
        #{otherLogin,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.renbaojia.blog.model.AdminUserExample" resultType="java.lang.Long">
    select count(*) from public.admin_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update public.admin_user
    <set>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.img != null">
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=INTEGER},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=DATE},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=DATE},
      </if>
      <if test="record.otherLogin != null">
        other_login = #{record.otherLogin,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update public.admin_user
    set admin_id = #{record.adminId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=INTEGER},
      token = #{record.token,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=DATE},
      last_login_time = #{record.lastLoginTime,jdbcType=DATE},
      other_login = #{record.otherLogin,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      update_time = #{record.updateTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.renbaojia.blog.model.AdminUser">
    update public.admin_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=DATE},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=DATE},
      </if>
      <if test="otherLogin != null">
        other_login = #{otherLogin,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=DATE},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.renbaojia.blog.model.AdminUser">
    update public.admin_user
    set username = #{username,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=DATE},
      last_login_time = #{lastLoginTime,jdbcType=DATE},
      other_login = #{otherLogin,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
</mapper>